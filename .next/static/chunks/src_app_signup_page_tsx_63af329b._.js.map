{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/teronordstrom/projects/cursor-next-js-trial/src/app/signup/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { signUp, confirmSignUp } from 'aws-amplify/auth';\nimport Link from 'next/link';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  CircularProgress,\n  Paper,\n  InputAdornment,\n  IconButton,\n} from '@mui/material';\nimport {\n  Email as EmailIcon,\n  Lock as LockIcon,\n  Person as PersonIcon,\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n} from '@mui/icons-material';\n\nexport default function SignUpPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [confirmationCode, setConfirmationCode] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await signUp({\n        username: email,\n        password,\n        options: {\n          userAttributes: {\n            email,\n            given_name: firstName,\n            family_name: lastName,\n          },\n        },\n      });\n      setIsConfirming(true);\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        setError('Failed to create account. Please try again.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleConfirm = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await confirmSignUp({\n        username: email,\n        confirmationCode,\n      });\n      router.push('/login');\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        setError('Invalid confirmation code. Please try again.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        sx={{\n          minHeight: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          py: 12,\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h4\" gutterBottom>\n            {isConfirming ? 'Confirm your account' : 'Create your account'}\n          </Typography>\n\n          <Box\n            component=\"form\"\n            onSubmit={isConfirming ? handleConfirm : handleSubmit}\n            sx={{ mt: 3, width: '100%' }}\n          >\n            {!isConfirming ? (\n              <>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First name\"\n                  name=\"firstName\"\n                  autoComplete=\"given-name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PersonIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PersonIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EmailIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon />\n                      </InputAdornment>\n                    ),\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={() => setShowPassword(!showPassword)}\n                          edge=\"end\"\n                        >\n                          {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </>\n            ) : (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"confirmationCode\"\n                label=\"Confirmation code\"\n                name=\"confirmationCode\"\n                autoComplete=\"off\"\n                value={confirmationCode}\n                onChange={(e) => setConfirmationCode(e.target.value)}\n              />\n            )}\n\n            {error && (\n              <Typography color=\"error\" sx={{ mt: 2, textAlign: 'center' }}>\n                {error}\n              </Typography>\n            )}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isLoading}\n            >\n              {isLoading ? <CircularProgress size={24} /> : isConfirming ? 'Confirm' : 'Sign up'}\n            </Button>\n\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Already have an account?{' '}\n                <Link href=\"/login\" style={{ color: '#1976d2', textDecoration: 'none' }}>\n                  Sign in\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}